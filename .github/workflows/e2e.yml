name: E2E
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      NEXT_TELEMETRY_DISABLED: '1'
      CI: '1'
      KYROS_DEV_BEARER: dev-bearer
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r apps/adk-orchestrator/requirements.txt
          cd apps/console && npm ci
      - name: Install Playwright
        run: |
          cd apps/console && npx playwright install --with-deps
      - name: Start services
        run: |
          (cd apps/adk-orchestrator && uvicorn main:app --host 0.0.0.0 --port 8080) &
          echo $! > uvicorn.pid
          (cd apps/console && PORT=3001 npm run dev) &
          echo $! > console.pid
          # Wait for backend health
          for i in {1..40}; do
            if curl -fsS http://127.0.0.1:8080/healthz >/dev/null; then
              break
            fi
            sleep 1
          done
          # Wait for frontend
          for i in {1..60}; do
            if curl -fsS http://127.0.0.1:3001/ >/dev/null; then
              break
            fi
            sleep 1
          done
      - name: Smoke test â€“ click "Run Plan"
        run: |
          cat > apps/console/e2e.spec.ts <<'TS'
          import { test, expect } from '@playwright/test';
          test('run plan returns JSON', async ({ page }) => {
            await page.goto('http://127.0.0.1:3001/');
            await page.getByRole('button', { name: 'Run Plan' }).click();
            const result = page.locator('pre');
            await result.waitFor();
            await expect(result).toContainText('run_id');
          });
          TS
          cd apps/console && npx playwright test e2e.spec.ts --reporter=list
      - name: Stop
        if: always()
        run: |
          kill $(cat console.pid) || true
          kill $(cat uvicorn.pid) || true
